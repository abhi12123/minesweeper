{"version":3,"sources":["components/Cell.js","components/MineField.js","components/Popup.js","components/GamePage.js","components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","boxContent","handleClick","minesNearby","mineExist","stepped","flagged","className","style","concat","cellStyle","onClick","pointerEvents","cellContentStyle","MineField","option","gameStatus","setGameStatus","resetMine","boxObject","useState","Array","fill","mineFieldArray","setMineFieldArray","minePosArray","setMinePosArray","numOfStepped","setNumOfStepped","getRandomCombination","Math","floor","random","createMinePosArray","i","minePos","push","Set","getNeighbours","x","y","arr2","returnArray","map","el1","el2","insertElement","value","array","existingBox","slice","numOfMinesNearby","stepOnBox","arrayToStep","pos","n","flagBox","flagStatus","handleGameOver","useEffect","neighbourArray","length","mineFieldArrayRow","j","xPos","yPos","Popup","handleReplay","to","GamePage","setOption","setResetMine","href","height","status","HomePage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b525114a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Cell({ boxContent, handleClick }) {\n    const { minesNearby, mineExist, stepped, flagged } = boxContent;\n    const cellStyle = () => {\n        let style = ''\n        if (stepped) {\n            style = style.concat(' stepped')\n        } else {\n            style = style.concat(' unstepped')\n        }\n\n        return style\n    }\n    const cellContentStyle = () => {\n        let style = ''\n        if (mineExist && stepped) {\n            style = style.concat(' bomb-img')\n        }\n        if (flagged) {\n            style = style.concat(' flag-img')\n        }\n        return style\n    }\n    return (\n        <div\n            className={`\n                cell w3-button w3-border w3-ripple ${cellStyle()}\n            `}\n            onClick={() => { handleClick() }}\n            style={stepped ? { pointerEvents: 'none' } : null}\n        >\n            <span className={`cell-content ${cellContentStyle()}`}>\n                {minesNearby === 0 || !stepped || mineExist ? null : minesNearby}\n            </span>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\n\nexport default function MineField({ option, gameStatus, setGameStatus, resetMine }) {\n    const boxObject = {\n        minesNearby: 0,\n        mineExist: false,\n        stepped: false,\n        flagged: false\n    }\n\n    const [mineFieldArray, setMineFieldArray] = useState(new Array(7).fill(new Array(7).fill(boxObject)));\n    const [minePosArray, setMinePosArray] = useState([]);\n    const [numOfStepped, setNumOfStepped] = useState(0);\n\n    const getRandomCombination = () => {\n        return Math.floor(Math.random() * 7)\n    }\n\n    const createMinePosArray = () => {\n        let minePosArray = [];\n        for (let i = 0; i < 5; i++) {\n            const minePos = [getRandomCombination(), getRandomCombination()];\n            minePosArray.push(minePos)\n        }\n        minePosArray = [...new Set(minePosArray)];\n        return minePosArray;\n    }\n\n    const getNeighbours = (x, y) => {\n        const arr1 = [x - 1, x, x + 1];\n        const arr2 = [y - 1, y, y + 1];\n        let returnArray = []\n        arr1.map((el1) => {\n            arr2.map((el2) => {\n                if ((el1 === x && el2 === y) || el1 < 0 || el2 < 0 || el1 > 6 || el2 > 6) {\n                } else {\n                    returnArray.push([el1, el2])\n                }\n            })\n        })\n        return returnArray;\n    }\n\n    const insertElement = (value, array, x, y) => {\n        let existingBox = array[x][y];\n        if (value === 'mine') {\n            return [\n                ...array.slice(0, x),\n                [...array[x].slice(0, y), { ...existingBox, mineExist: true }, ...array[x].slice(y + 1)],\n                ...array.slice(x + 1)\n            ]\n        }\n        if (value === 'mines-nearby') {\n            let numOfMinesNearby = array[x][y].minesNearby;\n            return [\n                ...array.slice(0, x),\n                [...array[x].slice(0, y), { ...existingBox, minesNearby: numOfMinesNearby + 1 }, ...array[x].slice(y + 1)],\n                ...array.slice(x + 1)\n            ]\n        }\n    }\n\n    const handleClick = (x, y) => {\n        option === 'step' && setMineFieldArray(stepOnBox(x, y))\n        option === 'flag' && setMineFieldArray(flagBox(x, y))\n    }\n\n    const stepOnBox = (x, y) => {\n        if (mineFieldArray[x][y].flagged || mineFieldArray[x][y].stepped === true) return mineFieldArray;\n        if (mineFieldArray[x][y].mineExist) {\n            setGameStatus('game-over-lost');\n\n        }\n        let arrayToStep = [];\n        arrayToStep.push([x, y])\n        if (mineFieldArray[x][y].minesNearby === 0) {\n            getNeighbours(x, y).map((pos) =>\n                arrayToStep.push(pos)\n            )\n        }\n        let array = mineFieldArray;\n        let n = numOfStepped;\n        arrayToStep.map((pos) => {\n            let existingBox = mineFieldArray[pos[0]][pos[1]];\n            if (!existingBox.flagged && !existingBox.stepped) {\n                array = [\n                    ...array.slice(0, pos[0]),\n                    [...array[pos[0]].slice(0, pos[1]), { ...existingBox, stepped: true }, ...array[pos[0]].slice(pos[1] + 1)],\n                    ...array.slice(pos[0] + 1)\n                ];\n                n++\n            }\n        })\n        setNumOfStepped(n);\n        return array\n    }\n\n    const flagBox = (x, y) => {\n        let existingBox = mineFieldArray[x][y];\n        let flagStatus = mineFieldArray[x][y].flagged;\n        if (mineFieldArray[x][y].stepped) return mineFieldArray\n        return [\n            ...mineFieldArray.slice(0, x),\n            [...mineFieldArray[x].slice(0, y), { ...existingBox, flagged: !flagStatus }, ...mineFieldArray[x].slice(y + 1)],\n            ...mineFieldArray.slice(x + 1)\n        ]\n    }\n\n    const handleGameOver = () => {\n        let array = mineFieldArray\n        minePosArray.map((pos) => {\n            let existingBox = mineFieldArray[pos[0]][pos[1]];\n            array = [\n                ...array.slice(0, pos[0]),\n                [...array[pos[0]].slice(0, pos[1]), { ...existingBox, stepped: true, flagged: false }, ...array[pos[0]].slice(pos[1] + 1)],\n                ...array.slice(pos[0] + 1)\n            ]\n        })\n        setMineFieldArray(array);\n    }\n\n    useEffect(() => {\n        let array = mineFieldArray;\n        let neighbourArray = [];\n        const minePosArray = createMinePosArray()\n        minePosArray.map((minePos) => {\n            array = insertElement('mine', array, ...minePos)\n            neighbourArray.push(...getNeighbours(...minePos))\n        })\n        neighbourArray.map((pos) => {\n            array = insertElement('mines-nearby', array, ...pos);\n        })\n        setMineFieldArray(array);\n        setMinePosArray(minePosArray)\n    }, [])\n\n    useEffect(() => {\n        if (gameStatus == 'game-over-lost') {\n            handleGameOver()\n        }\n        if (numOfStepped == (49 - minePosArray.length)) {\n            setGameStatus('game-over-won')\n            handleGameOver()\n        }\n    }, [gameStatus, numOfStepped])\n\n    useEffect(() => {\n        let array = new Array(7).fill(new Array(7).fill(boxObject));\n        let neighbourArray = [];\n        const minePosArray = createMinePosArray()\n        minePosArray.map((minePos) => {\n            array = insertElement('mine', array, ...minePos)\n            neighbourArray.push(...getNeighbours(...minePos))\n        })\n        neighbourArray.map((pos) => {\n            array = insertElement('mines-nearby', array, ...pos);\n        })\n        setMineFieldArray(array);\n        setMinePosArray(minePosArray);\n        setGameStatus('started');\n        setNumOfStepped(0)\n    }, [resetMine])\n\n    return (\n        <div className='mine-field'>\n            {\n                mineFieldArray.map(\n                    (mineFieldArrayRow, i) =>\n                        <div>\n                            {\n                                mineFieldArrayRow.map((boxContent, j) =>\n                                    <Cell boxContent={boxContent} xPos={i} yPos={j} handleClick={() => handleClick(i, j)} />)\n                            }\n                        </div>\n                )\n            }\n\n        </div>\n    )\n}\n\n","import React from 'react';\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nexport default function Popup({ gameStatus, handleReplay }) {\n    return (\n        <div className={`popup ${gameStatus}`}>\n            {\n                gameStatus === 'game-over-lost' ? 'Game Over' : 'Won'\n            }\n            <div className='popup-buttons'>\n                <Link to='/'>\n                    <button className='w3-margin w3-round-xlarge w3-button w3-ripple'>Exit</button>\n                </Link>\n                <button className='w3-margin w3-round-xlarge w3-button w3-ripple' onClick={() => handleReplay()}>replay</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport MineField from './MineField';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Popup from './Popup';\n\nexport default function GamePage() {\n    const [option, setOption] = useState('step');\n    const [gameStatus, setGameStatus] = useState('started');\n    const [resetMine, setResetMine] = useState(false)\n\n    const handleReplay = () => {\n        setResetMine(!resetMine);\n    }\n\n    return (\n        <div className='game-page'>\n            {\n                gameStatus !== 'started' && <Popup gameStatus={gameStatus} handleReplay={handleReplay} />\n            }\n            <div className='w3-col l12 m12 s12'>\n                <Link to=\"/\">\n                    <div href=\"/\" className='w3-xxxlarge' style={{ height: '100px' }}>\n                        <i className=\"fas fa-long-arrow-alt-left\"></i>\n                    </div>\n                </Link>\n            </div>\n            <div>\n                <div className='w3-col l8 m8 s12 w3-center'>\n                    <MineField option={option} gameStatus={gameStatus} setGameStatus={(status) => setGameStatus(status)} resetMine={resetMine} />\n                </div>\n                <div className='w3-col l4 m4 s12 options'>\n                    <div className='w3-col l12 m12 s6'>\n                        <button\n                            className={`option  ${option === 'step' ? 'selected' : ''}`}\n                            onClick={() => setOption('step')}\n                        >Step <i className=\"fas fa-shoe-prints\"></i></button>\n                    </div>\n                    <div className='w3-col l12 m12 s6'>\n                        <button\n                            className={`option ${option === 'flag' ? 'selected' : ''}`}\n                            onClick={() => setOption('flag')}\n                        >Flag <i className=\"far fa-flag\"></i></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {\n    Link\n} from \"react-router-dom\";\n\nexport default function HomePage() {\n    return (\n        <div className='homepage w3-center'>\n            <div className=''><b>MINESWEEPER</b></div>\n            <div><Link to=\"/game-page\"><button className='w3-button w3-ripple'>Play</button></Link></div>\n        </div>\n    )\n}\n","\nimport './App.scss';\nimport GamePage from './components/GamePage';\nimport HomePage from './components/HomePage'\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/game-page\">\n            <GamePage />\n          </Route>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  HashRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App /></Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}